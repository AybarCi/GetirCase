{"ast":null,"code":"import _toConsumableArray from \"/Users/Petito/ReactNativeProjects/GetirCase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/Petito/ReactNativeProjects/GetirCase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/Petito/ReactNativeProjects/GetirCase/src/components/TagCheckList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { Checkbox, Table, TableBody, TableCell, TableContainer, TableRow, TextField } from '@mui/material';\nimport items from '../data/items';\nimport linq from 'linq';\nimport * as productActions from \"../store/actions/product.actions\";\nimport { connect } from \"react-redux\";\nimport Enumerable from 'linq';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TagCheckList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tags = _useState6[0],\n      setTags = _useState6[1];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      autoFocusStatus = _React$useState4[0],\n      setAutoFocusStatus = _React$useState4[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      products = _useState8[0],\n      setProducts = _useState8[1];\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n      console.log(\"aranacaklar: \", Enumerable.from(newChecked).select(function (element) {\n        return element;\n      }).toArray());\n      var newList = [];\n\n      if (Enumerable.from(newChecked).toArray().length > 1) {\n        newList = linq.from(JSON.parse(localStorage.getItem(\"@products\"))).where(function (x) {\n          return Enumerable.from(newChecked).select(function (element) {\n            return element;\n          }).contains(Enumerable.from(x.tags).select(function (y) {\n            return y;\n          }));\n        }).toArray();\n      } else {\n        newList = linq.from(JSON.parse(localStorage.getItem(\"@products\"))).toArray();\n      }\n\n      console.log(\"newchecked: \", Enumerable.from(newChecked).toArray().length);\n      console.log(\"brand tarafinda checkledim\", products);\n      props.onRefreshUsageProducts(newList);\n    };\n  };\n\n  var handleChange = function handleChange(event) {\n    var formattedQuery = event.target.value.toLowerCase();\n\n    if (event.target.value === null || event.target.value === \"\") {\n      linq.from(items).forEach(function (item) {\n        linq.from(item.tags).forEach(function (tag) {\n          tagList.push(tag);\n        });\n      });\n      setTags(tagList);\n    } else {\n      var filteredData = tags.filter(function (x) {\n        return x.toLowerCase().includes(formattedQuery);\n      });\n      console.log(\"filteredData: \", filteredData);\n      setTags(filteredData);\n    }\n\n    setQuery(event.target.value);\n  };\n\n  var tagList = [];\n  useEffect(function () {\n    if (!isLoaded) {\n      setIsLoaded(true);\n      linq.from(items).forEach(function (item) {\n        linq.from(item.tags).forEach(function (tag) {\n          tagList.push(tag);\n        });\n      });\n      setTags(tagList);\n    }\n\n    if (props.refresh === true) {\n      setProducts(props.products);\n    }\n\n    if (props.loaded === true) {\n      props.onGetProductsReset();\n      console.log('buraya geliyor mu');\n      setProducts(props.products);\n    }\n  }, [isLoaded, tagList]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    sx: {\n      maxHeight: 240\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-search\",\n      label: \"Search...\",\n      onChange: handleChange,\n      type: \"search\",\n      variant: \"standard\",\n      className: \"px-3 justify-content-between\",\n      color: \"secondary\",\n      value: query,\n      onFocus: function onFocus() {\n        return setAutoFocusStatus(true);\n      },\n      autoFocus: autoFocusStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: linq.from(tags).distinct().toArray().map(function (tag) {\n          var labelId = \"checkbox-list-label-\".concat(tag);\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            role: \"checkbox\",\n            tabIndex: -1,\n            onClick: handleToggle(tag),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                maxWidth: 15\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"secondary\",\n                edge: \"start\",\n                checked: checked.indexOf(tag) !== -1,\n                tabIndex: -1,\n                disableRipple: true,\n                inputProps: {\n                  'aria-labelledby': labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 27\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, _this)]\n          }, tag, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TagCheckList, \"i0D5o77wAbuUd18Ab6M7CbJEXwM=\");\n\n_c = TagCheckList;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.product.errors,\n    loading: state.product.loading,\n    products: state.product.products,\n    refresh: state.product.refresh,\n    loaded: state.product.loaded\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onRefreshUsageProducts: function onRefreshUsageProducts(products) {\n      return dispatch(productActions.refreshUsageProducts(products));\n    },\n    onRefreshUsageProductsReset: function onRefreshUsageProductsReset() {\n      return dispatch(productActions.refreshUsageProductsReset());\n    },\n    onGetProductsReset: function onGetProductsReset() {\n      return dispatch(productActions.getProductsReset());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TagCheckList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TagCheckList\");","map":{"version":3,"sources":["/Users/Petito/ReactNativeProjects/GetirCase/src/components/TagCheckList.js"],"names":["React","useState","useEffect","Checkbox","Table","TableBody","TableCell","TableContainer","TableRow","TextField","items","linq","productActions","connect","Enumerable","TagCheckList","props","checked","setChecked","isLoaded","setIsLoaded","tags","setTags","query","setQuery","autoFocusStatus","setAutoFocusStatus","products","setProducts","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","console","log","from","select","element","toArray","newList","length","JSON","parse","localStorage","getItem","where","x","contains","y","onRefreshUsageProducts","handleChange","event","formattedQuery","target","toLowerCase","forEach","item","tag","tagList","filteredData","filter","includes","refresh","loaded","onGetProductsReset","maxHeight","distinct","map","labelId","maxWidth","mapStateToProps","state","errors","product","loading","mapDispatchToProps","dispatch","refreshUsageProducts","onRefreshUsageProductsReset","refreshUsageProductsReset","getProductsReset"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Checkbox,Table,TableBody,TableCell,TableContainer,TableRow,TextField} from '@mui/material';\r\nimport items from '../data/items'\r\nimport linq from 'linq';\r\nimport * as productActions from \"../store/actions/product.actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Enumerable from 'linq';\r\n\r\nfunction TagCheckList(props) {\r\n  const [checked, setChecked] = useState([0]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const [autoFocusStatus, setAutoFocusStatus] = React.useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    \r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n    console.log(\"aranacaklar: \",Enumerable.from(newChecked).select(element => element).toArray());\r\n    let newList = [];\r\n    if (Enumerable.from(newChecked).toArray().length > 1) {\r\n      newList = linq.from(JSON.parse(localStorage.getItem(\"@products\"))).where(x => Enumerable.from(newChecked).select(element => element).contains(Enumerable.from(x.tags).select(y => y))).toArray();\r\n    } else {\r\n      newList = linq.from(JSON.parse(localStorage.getItem(\"@products\"))).toArray();\r\n    }\r\n    console.log(\"newchecked: \", Enumerable.from(newChecked).toArray().length);\r\n    console.log(\"brand tarafinda checkledim\",products);\r\n    props.onRefreshUsageProducts(newList);\r\n  };\r\n  const handleChange = (event) => {\r\n    const formattedQuery = event.target.value.toLowerCase();\r\n    if (event.target.value === null || event.target.value === \"\") {\r\n      linq.from(items).forEach(item => {\r\n        linq.from(item.tags).forEach( tag =>{\r\n            tagList.push(tag);\r\n        })});\r\n        setTags(tagList);\r\n    } else {\r\n      const filteredData = tags.filter(x => x.toLowerCase().includes(formattedQuery));\r\n      console.log(\"filteredData: \",filteredData)\r\n      setTags(filteredData);\r\n    }\r\n    setQuery(event.target.value);\r\n  }\r\n  let tagList = [];\r\n  useEffect(() => {\r\n    if (!isLoaded) {\r\n      setIsLoaded(true);\r\n      linq.from(items).forEach(item => {\r\n        linq.from(item.tags).forEach( tag =>{\r\n            tagList.push(tag);\r\n        })});\r\n        setTags(tagList);\r\n    }\r\n    if (props.refresh === true) {\r\n      setProducts(props.products);\r\n    }\r\n    if (props.loaded === true) {\r\n      props.onGetProductsReset();\r\n      console.log('buraya geliyor mu')\r\n      setProducts(props.products);\r\n    }\r\n  }, [isLoaded, tagList])\r\n  \r\n  return (\r\n    <TableContainer sx={{ maxHeight: 240 }}>\r\n      <TextField\r\n                    id=\"standard-search\"\r\n                    label=\"Search...\"\r\n                    onChange={handleChange}\r\n                    type=\"search\"\r\n                    variant=\"standard\"\r\n                    className=\"px-3 justify-content-between\"\r\n                    color=\"secondary\"\r\n                    value={query}\r\n                    onFocus={() => setAutoFocusStatus(true)}\r\n                    autoFocus={autoFocusStatus}\r\n              />\r\n    <Table stickyHeader aria-label=\"sticky table\">\r\n      <TableBody>\r\n        {\r\n          linq.from(tags).distinct().toArray().map((tag) =>{\r\n          const labelId = `checkbox-list-label-${tag}`;\r\n                      return (\r\n                        <TableRow hover key={tag} role=\"checkbox\" tabIndex={-1} onClick={handleToggle(tag)}>\r\n                          <TableCell sx={{maxWidth: 15}}>\r\n                            <Checkbox\r\n                              color=\"secondary\"\r\n                              edge=\"start\"\r\n                              checked={checked.indexOf(tag) !== -1}\r\n                              tabIndex={-1}\r\n                              disableRipple\r\n                              inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                          </TableCell>\r\n                            <TableCell>\r\n                              {tag}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                      );}       \r\n                )\r\n        }\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errors: state.product.errors,\r\n    loading: state.product.loading,\r\n    products: state.product.products,\r\n    refresh: state.product.refresh,\r\n    loaded: state.product.loaded,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRefreshUsageProducts: (products) => dispatch(productActions.refreshUsageProducts(products)),\r\n    onRefreshUsageProductsReset: () => dispatch(productActions.refreshUsageProductsReset()),\r\n    onGetProductsReset: () => dispatch(productActions.getProductsReset())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TagCheckList);"]},"metadata":{},"sourceType":"module"}